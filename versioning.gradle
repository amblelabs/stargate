// MAJOR.MINOR.PATCH-build.BUILD-DASH-SEPARATED-BRANCH+mc.MCVER (CI + custom branch)
// or
// MAJOR.MINOR.PATCH-build.BUILD+mc.MCVER (CI + main branch)
// or
// MAJOR.MINOR.PATCH-release+mc.MCVER (CI + release branch)
// or
// MAJOR.MINOR.PATCH-testbuild+mc.MCVER (no CI + no branch = local)

private static def getBranch() {
    // groovy is very bad at globals, apparently.
    final String REFS_PREFIX = "refs/heads/"
    String branch = System.getenv("GITHUB_REF")

    if (!branch?.startsWith(REFS_PREFIX))
        return null

    return branch.substring(REFS_PREFIX.length()).replaceAll("/", "-")
}

private static def getBuildNumber() {
    return System.getenv("GITHUB_RUN_NUMBER")
}

final String BUILD = "build"
final String BUILD_RELEASE = "release"
final String BUILD_LOCAL = "testbuild"

final String BRANCH_RELEASE = "release"
final String BRANCH_MAIN = "main"

ext.getPublicVersion = {
    String branch = getBranch()
    String build = getBuildNumber()

    String qualifier = BUILD

    if (branch == BRANCH_MAIN) {
        branch = null
    } else if (branch == BRANCH_RELEASE) {
        branch = null
        build = null
        qualifier = BUILD_RELEASE
    } else if (build == null) {
        // No CI
        qualifier = BUILD_LOCAL
    }

    if (build)
        qualifier += ".$build"

    if (branch)
        qualifier += "-$branch"

    return "$project.mod_version-$qualifier+mc.$project.minecraft_version"
}

ext.getArtifactVersion = {
    String branch = getBranch()

    if (branch == BRANCH_MAIN) {
        branch = null
    }

    return "$project.mod_version-$branch+mc.$project.minecraft_version"
}
